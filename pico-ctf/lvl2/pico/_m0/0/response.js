var res = {'data':'HTTP/1.1 200 Partial Content\x0aX-Powered-By: Express\x0aAccept-Ranges: bytes\x0aCache-Control: public, max-age=0\x0aLast-Modified: Thu, 30 Mar 2017 06:56:40 GMT\x0aETag: W/\x22d5f-15b1e007c40\x22\x0aContent-Type: application/javascript\x0aContent-Range: bytes 0-3422/3423\x0aContent-Length: 3423\x0aDate: Sun, 02 Apr 2017 08:54:17 GMT\x0aConnection: keep-alive\x0a\x0a/*!\x0a * JavaScript Cookie v2.1.0\x0a * https://github.com/js-cookie/js-cookie\x0a *\x0a * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\x0a * Released under the MIT license\x0a */\x0a(function (factory) {\x0a\x09if (typeof define === \x27function\x27 && define.amd) {\x0a\x09\x09define(factory);\x0a\x09} else if (typeof exports === \x27object\x27) {\x0a\x09\x09module.exports = factory();\x0a\x09} else {\x0a\x09\x09var _OldCookies = window.Cookies;\x0a\x09\x09var api = window.Cookies = factory();\x0a\x09\x09api.noConflict = function () {\x0a\x09\x09\x09window.Cookies = _OldCookies;\x0a\x09\x09\x09return api;\x0a\x09\x09};\x0a\x09}\x0a}(function () {\x0a\x09function extend () {\x0a\x09\x09var i = 0;\x0a\x09\x09var result = {};\x0a\x09\x09for (; i \x3c arguments.length; i++) {\x0a\x09\x09\x09var attributes = arguments[ i ];\x0a\x09\x09\x09for (var key in attributes) {\x0a\x09\x09\x09\x09result[key] = attributes[key];\x0a\x09\x09\x09}\x0a\x09\x09}\x0a\x09\x09return result;\x0a\x09}\x0a\x0a\x09function init (converter) {\x0a\x09\x09function api (key, value, attributes) {\x0a\x09\x09\x09var result;\x0a\x0a\x09\x09\x09// Write\x0a\x0a\x09\x09\x09if (arguments.length \x3e 1) {\x0a\x09\x09\x09\x09attributes = extend({\x0a\x09\x09\x09\x09\x09path: \x27/\x27\x0a\x09\x09\x09\x09}, api.defaults, attributes);\x0a\x0a\x09\x09\x09\x09if (typeof attributes.expires === \x27number\x27) {\x0a\x09\x09\x09\x09\x09var expires = new Date();\x0a\x09\x09\x09\x09\x09expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\x0a\x09\x09\x09\x09\x09attributes.expires = expires;\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09result = JSON.stringify(value);\x0a\x09\x09\x09\x09\x09if (/^[\x5c{\x5c[]/.test(result)) {\x0a\x09\x09\x09\x09\x09\x09value = result;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} catch (e) {}\x0a\x0a\x09\x09\x09\x09if (!converter.write) {\x0a\x09\x09\x09\x09\x09value = encodeURIComponent(String(value))\x0a\x09\x09\x09\x09\x09\x09.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\x0a\x09\x09\x09\x09} else {\x0a\x09\x09\x09\x09\x09value = converter.write(value, key);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09key = encodeURIComponent(String(key));\x0a\x09\x09\x09\x09key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\x0a\x09\x09\x09\x09key = key.replace(/[\x5c(\x5c)]/g, escape);\x0a\x0a\x09\x09\x09\x09return (document.cookie = [\x0a\x09\x09\x09\x09\x09key, \x27=\x27, value,\x0a\x09\x09\x09\x09\x09attributes.expires && \x27; expires=\x27 + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\x0a\x09\x09\x09\x09\x09attributes.path    && \x27; path=\x27 + attributes.path,\x0a\x09\x09\x09\x09\x09attributes.domain  && \x27; domain=\x27 + attributes.domain,\x0a\x09\x09\x09\x09\x09attributes.secure ? \x27; secure\x27 : \x27\x27\x0a\x09\x09\x09\x09].join(\x27\x27));\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// Read\x0a\x0a\x09\x09\x09if (!key) {\x0a\x09\x09\x09\x09result = {};\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09// To prevent the for loop in the first place assign an empty array\x0a\x09\x09\x09// in case there are no cookies at all. Also prevents odd result when\x0a\x09\x09\x09// calling \x22get()\x22\x0a\x09\x09\x09var cookies = document.cookie ? document.cookie.split(\x27; \x27) : [];\x0a\x09\x09\x09var rdecode = /(%[0-9A-Z]{2})+/g;\x0a\x09\x09\x09var i = 0;\x0a\x0a\x09\x09\x09for (; i \x3c cookies.length; i++) {\x0a\x09\x09\x09\x09var parts = cookies[i].split(\x27=\x27);\x0a\x09\x09\x09\x09var name = parts[0].replace(rdecode, decodeURIComponent);\x0a\x09\x09\x09\x09var cookie = parts.slice(1).join(\x27=\x27);\x0a\x0a\x09\x09\x09\x09if (cookie.charAt(0) === \x27\x22\x27) {\x0a\x09\x09\x09\x09\x09cookie = cookie.slice(1, -1);\x0a\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09cookie = converter.read ?\x0a\x09\x09\x09\x09\x09\x09converter.read(cookie, name) : converter(cookie, name) ||\x0a\x09\x09\x09\x09\x09\x09cookie.replace(rdecode, decodeURIComponent);\x0a\x0a\x09\x09\x09\x09\x09if (this.json) {\x0a\x09\x09\x09\x09\x09\x09try {\x0a\x09\x09\x09\x09\x09\x09\x09cookie = JSON.parse(cookie);\x0a\x09\x09\x09\x09\x09\x09} catch (e) {}\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if (key === name) {\x0a\x09\x09\x09\x09\x09\x09result = cookie;\x0a\x09\x09\x09\x09\x09\x09break;\x0a\x09\x09\x09\x09\x09}\x0a\x0a\x09\x09\x09\x09\x09if (!key) {\x0a\x09\x09\x09\x09\x09\x09result[name] = cookie;\x0a\x09\x09\x09\x09\x09}\x0a\x09\x09\x09\x09} catch (e) {}\x0a\x09\x09\x09}\x0a\x0a\x09\x09\x09return result;\x0a\x09\x09}\x0a\x0a\x09\x09api.get = api.set = api;\x0a\x09\x09api.getJSON = function () {\x0a\x09\x09\x09return api.apply({\x0a\x09\x09\x09\x09json: true\x0a\x09\x09\x09}, [].slice.call(arguments));\x0a\x09\x09};\x0a\x09\x09api.defaults = {};\x0a\x0a\x09\x09api.remove = function (key, attributes) {\x0a\x09\x09\x09api(key, \x27\x27, extend(attributes, {\x0a\x09\x09\x09\x09expires: -1\x0a\x09\x09\x09}));\x0a\x09\x09};\x0a\x0a\x09\x09api.withConverter = init;\x0a\x0a\x09\x09return api;\x0a\x09}\x0a\x0a\x09return init(function () {});\x0a}));'}