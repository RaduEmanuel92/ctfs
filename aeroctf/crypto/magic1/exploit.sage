flag = 'd9a103a6006bfba17074ef571011d8eededdf851b355bdc4795616744066433695b9e9201f6deff7577c03ba690d4d517bdaae'.decode('hex')
c = 5405053190768240950975482839552589374748349681382030872360550121041249100085609471

p = factor(2*c)
print(p)
perm = []

for item in p:
    for i in range(item[1]):
        perm.append(item[0])

import itertools

nn = -1
found = False
for k in range(1, len(perm) + 1):
    if found:
        break
    for item in itertools.combinations(perm, k):
        n = 1
        for i in item:
            n *= i
        if (1/2*n*(n**2 + 1) - n) % (n**2) == c:
            print(n)
            nn = n
            found = True
            break

n = nn
key = 1/2*n*(n**2 + 1) - n
from Crypto.Util.number import *

ct = bytes_to_long(flag)
pt = int(key)^^int(ct)
print(['ct', ct])
print(['pt', pt])
print(['key', key])
print([long_to_bytes(pt)])